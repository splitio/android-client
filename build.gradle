buildscript {
    repositories {
        google()
        mavenCentral()
        jcenter()

    }
    dependencies {
        classpath 'com.android.tools.build:gradle:4.0.2'
    }
}

plugins {
    id 'com.android.library'
    id 'maven-publish'
    id 'signing'
}

ext {
    splitVersion = '2.8.1'
}

android {
    compileSdkVersion 30
    targetCompatibility = '1.8'
    sourceCompatibility = '1.8'

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    defaultConfig {

        minSdkVersion 15
        targetSdkVersion 29
        versionCode 0
        versionName splitVersion

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'split-proguard-rules.pro'

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
    }

    configurations {
        javadocDeps
        all*.exclude group: 'com.google.guava', module: 'listenablefuture'
    }

    lintOptions {
        disable 'InvalidPackage'
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }

    sourceSets {
        androidTest {
            java.srcDirs += "src/sharedTest/java"
        }
        test {
            java.srcDirs += "src/sharedTest/java"
        }
    }

    buildTypes {
        debug {
            buildConfigField("String", "SPLIT_VERSION_NAME", "\"${splitVersion}\"")
        }
        release {
            buildConfigField("String", "SPLIT_VERSION_NAME", "\"${splitVersion}\"")
        }
    }
}

dependencies {

    def roomVersion = '2.3.0'

    // Room components
    implementation "androidx.room:room-runtime:$roomVersion"
    annotationProcessor "androidx.room:room-compiler:$roomVersion"
    implementation 'androidx.work:work-runtime:2.6.0'

    implementation 'androidx.lifecycle:lifecycle-process:2.3.1'

    implementation 'androidx.annotation:annotation:1.2.0'

    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.google.code.gson:gson:2.8.8'
    implementation 'com.google.guava:guava:18.0'

    implementation 'org.yaml:snakeyaml:1.29'
    implementation 'org.jetbrains:annotations:22.0.0'
    implementation "com.squareup.okhttp3:okhttp:3.12.0"
    implementation 'com.google.android.gms:play-services-base:17.6.0'

    // Test
    testImplementation 'junit:junit:4.13.2'

    androidTestImplementation 'androidx.test:core:1.2.0'
    androidTestImplementation 'androidx.test:runner:1.4.0'
    androidTestImplementation 'androidx.test:rules:1.4.0'
    androidTestImplementation 'com.squareup.okhttp3:mockwebserver:3.12.0'
    androidTestImplementation "androidx.room:room-testing:$roomVersion"
    androidTestImplementation 'androidx.work:work-testing:2.6.0'

    testImplementation 'org.mockito:mockito-core:3.12.4'
    testImplementation 'org.hamcrest:hamcrest-all:1.3'
    testImplementation 'org.apache.commons:commons-lang3:3.12.0'
    testImplementation 'com.squareup.okhttp3:mockwebserver:3.12.0'

}

afterEvaluate {
    publishing {
        publications {
            project.components.all { print("PRJ NAME: " + name) }
            release(MavenPublication) {
                from components.release

                groupId = 'io.split.client'
                version = splitVersion
                artifact sourcesJar
                artifact javadocJar

                pom {
                    name = 'Split Android SDK'
                    packaging = 'aar'
                    description = 'Official Split Android SDK'
                    url = 'https://github.com/splitio/android-client'

                    licenses {
                        license {
                            name = 'The Apache License, Version 2.0'
                            url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        }
                    }

                    developers {
                        developer {
                            id = 'sarrubia'
                            name = 'Sebastian Arrubia'
                            email = 'sebastian@split.io'
                        }

                        developer {
                            id = 'fernando'
                            name = 'Fernando Martin'
                            email = 'fernando@split.io'
                        }
                    }

                    scm {
                        connection = 'scm:git:git@github.com:splitio/android-client.git'
                        developerConnection = 'scm:git@github.com:splitio/android-client.git'
                        url = 'https://github.com/splitio/android-client'
                    }
                }

                repositories {
                    maven {
                        def releasesRepoUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
                        def snapshotsRepoUrl = "https://oss.sonatype.org/content/repositories/snapshots/"
                        url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
                        credentials {
                            username = ossrhUsername
                            password = ossrhPassword
                        }
                    }
                }
            }
        }
    }
}

signing {
    sign publishing.publications
}

task sourcesJar(type: Jar) {
    archiveClassifier.set("sources")
    from android.sourceSets.main.java.srcDirs
//    archiveClassifier = "sources"
}

task javadoc(type: Javadoc) {
    failOnError false
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    classpath += configurations.javadocDeps
}

task javadocJar(type: Jar, dependsOn: javadoc) {
//    archiveClassifier = 'javadoc'
    archiveClassifier.set("javadoc")
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}
