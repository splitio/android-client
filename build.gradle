apply plugin: 'com.android.library'
apply plugin: 'signing'
apply plugin: 'maven'
apply plugin: "maven-publish"

ext {
    splitVersion = '1.2.3-sdks-319.1'
}

allprojects {
    group = 'io.split.client'
    version = splitVersion
}

android {
    compileSdkVersion 26
    buildToolsVersion '27.0.3'
    useLibrary 'org.apache.http.legacy'
    targetCompatibility = '1.7'
    sourceCompatibility = '1.7'

    compileOptions {
        sourceCompatibility 1.8
        targetCompatibility 1.8
    }

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 26
        versionCode 0
        versionName splitVersion

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'split-proguard-rules.pro'
    }

    configurations {
        javadocDeps
    }

    lintOptions {
        disable 'InvalidPackage'
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'junit:junit:4.12'
    implementation 'com.google.code.gson:gson:2.8.2'
    implementation 'com.google.guava:guava:18.0'
    implementation 'org.apache.httpcomponents:httpclient-android:4.3.5'
    implementation "android.arch.lifecycle:extensions:1.1.1"

    // Test
    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testImplementation 'org.mockito:mockito-core:2.11.0'
    testImplementation 'org.hamcrest:hamcrest-all:1.3'
    testImplementation 'org.apache.commons:commons-lang3:3.6'
}

repositories {
    mavenCentral()
    google()
}

buildscript {
    repositories {
        jcenter()
        mavenCentral()
        google()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.0.1'
    }
}

signing {
    sign configurations.archives
}

uploadArchives {
    repositories {
        mavenDeployer {

            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: "https://oss.sonatype.org/content/repositories/releases") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            pom.project {
                name 'Split Android SDK'
                packaging 'jar'
                description 'Official Split Android SDK'
                url 'https://github.com/splitio/android-client'

                licenses {
                    license {
                        name 'The Apache License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                developers {
                    developer {
                        id 'sarrubia'
                        name 'Sebastian Arrubia'
                        email 'sebastian@split.io'
                    }

                    developer {
                        id 'fernando'
                        name 'Fernando Martin'
                        email 'fernando@split.io'
                    }
                }

                scm {
                    connection 'scm:git:git@github.com:splitio/android-client.git'
                    developerConnection 'scm:git@github.com:splitio/android-client.git'
                    url 'https://github.com/splitio/android-client'
                }
            }
        }
    }
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    failOnError false
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    classpath += configurations.javadocDeps
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}
